name: Presubmit

on: [push, pull_request]

jobs:
  linux:
    if: false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CMAKE: [3.26.4]
        C_COMPILER:
          - gcc-11
          - gcc-13
          - clang-14
          - clang-16
        BIN: [64]
        CONF:
          - GEN: Unix Makefiles
            CONFIG: Debug
          - GEN: Unix Makefiles
            CONFIG: Release
          - GEN: Ninja Multi-Config
            CONFIG: Release
        IMAGE:
          - streamhpc/opencl-sdk-intelcpu:ubuntu-22.04-20230717
        include:
          - CMAKE: 3.1.3
            C_COMPILER: gcc-7
            BIN: 64
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: gcc-7
            BIN: 64
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: gcc-7
            BIN: 32
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: gcc-7
            BIN: 32
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: clang-8
            BIN: 64
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: clang-8
            BIN: 64
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: clang-8
            BIN: 32
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
          - CMAKE: 3.1.3
            C_COMPILER: clang-8
            BIN: 32
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
    container: ${{matrix.IMAGE}}
    env:
      CMAKE_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/cmake
      CPACK_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/cpack
      CTEST_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/ctest
      CC: ${{matrix.C_COMPILER}}
      DEB_INSTALLATION_PATH: /usr
      INSTALL_LIBDIR: lib/x86_64-linux-gnu

    steps:
    - name: Checkout OpenCL-ICD-Loader
      uses: actions/checkout@v3

    - name: Checkout OpenCL-Headers
      uses: actions/checkout@v3
      with:
        path: external/OpenCL-Headers
        # ToDo: Change to KhronosGroup/OpenCL-Headers:main
        repository: StreamHPC/OpenCL-Headers
        ref: update-ci

    - name: Configure, install & package OpenCL-Headers
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/external/OpenCL-Headers/build &&
        cd $GITHUB_WORKSPACE/external/OpenCL-Headers/build &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        `if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]]; then echo "-D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}"; fi`
        -D CMAKE_C_FLAGS="-w -m${{matrix.BIN}}"
        -D CMAKE_INSTALL_PREFIX=`if [[ "${{matrix.CMAKE}}" != "3.1.3" ]]; then echo "$GITHUB_WORKSPACE/external/OpenCL-Headers/install"; else echo "$DEB_INSTALLATION_PATH"; fi`
        `if [[ "${{matrix.CMAKE}}" != "3.1.3" ]]; then echo "-D CPACK_PACKAGING_INSTALL_PREFIX=$DEB_INSTALLATION_PATH"; fi`
        -D BUILD_TESTING=OFF
        $GITHUB_WORKSPACE/external/OpenCL-Headers &&
        $CMAKE_EXE
        --build $GITHUB_WORKSPACE/external/OpenCL-Headers/build
        --target install
        --
        -j`nproc` &&
        $CPACK_EXE
        --config "$GITHUB_WORKSPACE/external/OpenCL-Headers/build/CPackConfig.cmake"
        -G DEB
        -C ${{matrix.CONF.CONFIG}}
        -B "$GITHUB_WORKSPACE/external/OpenCL-Headers/package-deb"

    - name: Configure
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/build &&
        cd $GITHUB_WORKSPACE/build &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        -D BUILD_TESTING=ON
        `if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]]; then echo "-D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}"; fi`
        -D CMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic -m${{matrix.BIN}}"
        -D CMAKE_INSTALL_PREFIX=`if [[ "${{matrix.CMAKE}}" != "3.1.3" ]]; then echo "$GITHUB_WORKSPACE/install"; else echo "$DEB_INSTALLATION_PATH"; fi`
        `if [[ "${{matrix.CMAKE}}" != "3.1.3" ]]; then echo "-D CPACK_PACKAGING_INSTALL_PREFIX=$DEB_INSTALLATION_PATH"; fi`
        `if [[ "${{matrix.CMAKE}}" != "3.1.3" ]]; then echo "-D CMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/external/OpenCL-Headers/install"; fi`
        $GITHUB_WORKSPACE

    - name: Build
      shell: bash
      run: if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config ${{matrix.CONF.CONFIG}} -- -j `nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config Debug;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config Release;
        fi

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/OpenCL-ICD-Loader/build
      run: if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CTEST_EXE --output-on-failure --parallel `nproc`;
        else
          $CTEST_EXE --output-on-failure -C Debug   --parallel `nproc`;
          $CTEST_EXE --output-on-failure -C Release --parallel `nproc`;
        fi

    - name: Package DEB
      shell: bash
      run: $CPACK_EXE
        --config "$GITHUB_WORKSPACE/build/CPackConfig.cmake"
        -G DEB
        -C ${{matrix.CONF.CONFIG}}
        -B "$GITHUB_WORKSPACE/package-deb"

    - name: Consume (DEB)
      shell: bash
      run: dpkg -i $GITHUB_WORKSPACE/external/OpenCL-Headers/package-deb/*.deb &&
        dpkg -i $GITHUB_WORKSPACE/package-deb/*.deb &&
        mkdir $GITHUB_WORKSPACE/build_package &&
        cd $GITHUB_WORKSPACE/build_package &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        `if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]]; then echo "-D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}"; fi`
        -D CMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic -m${{matrix.BIN}}"
        $GITHUB_WORKSPACE/test/pkgconfig/bare &&
        if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_package --config ${{matrix.CONF.CONFIG}} -- -j `nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_package --config Debug;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_package --config Release;
        fi

    - name: Test pkg-config (DEB)
      shell: bash
      # We expect no pre-processor and compile flags (--cflags) but we do expect link flags (--libs)
      run: if [[ $(pkg-config OpenCL --cflags) ]];
        then
          exit 1;
        fi &&
        pkg-config OpenCL --libs | grep -q "\-lOpenCL"

    - name: Uninstall (DEB)
      shell: bash
      run: apt-get remove -y ocl-icd-opencl-dev ocl-icd-libopencl1

    - name: Test install
      shell: bash
      run: $CMAKE_EXE --build $GITHUB_WORKSPACE/build --target install --config ${{matrix.CONF.CONFIG}} -- -j`nproc`

    - name: Consume (install)
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/build_install && cd $GITHUB_WORKSPACE/build_install &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        `if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]]; then echo "-D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}"; fi`
        -D CMAKE_C_FLAGS="-Wall -Wextra -Werror -pedantic -m${{matrix.BIN}}"
        -D CMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/install
        $GITHUB_WORKSPACE/test/pkgconfig/bare &&
        if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_install -- -j`nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_install --config Debug   -- -j`nproc`;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_install --config Release -- -j`nproc`;
        fi

    - name: Test pkg-config (install)
      shell: bash
      # We expect no pre-processor and compile flags (--cflags) but we do expect link flags (--libs)
      run: if [[ "${{matrix.CMAKE}}" != "3.1.3" ]];
        then
          export PKG_CONFIG_PATH=$GITHUB_WORKSPACE/install/$INSTALL_LIBDIR/pkgconfig;
        fi &&
        if [[ $(pkg-config OpenCL --cflags) ]];
        then
          exit 1;
        fi &&
        pkg-config OpenCL --libs | `if [[ "${{matrix.CMAKE}}" != "3.1.3" ]]; then grep -q "\-L$GITHUB_WORKSPACE/install/$INSTALL_LIBDIR \-lOpenCL"; else grep -q "\-lOpenCL"; fi`
