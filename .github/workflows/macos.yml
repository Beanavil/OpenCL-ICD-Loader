name: MacOS

on: [push, pull_request]

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        C_COMPILER:
        - /usr/bin/gcc # Actually Clang 14
        - /usr/local/bin/gcc-11
        - /usr/local/bin/gcc-13
        GEN:
        - Xcode
        - Ninja Multi-Config
        STD: [99, 11, 17]
        exclude:
        - C_COMPILER: /usr/bin/gcc
          GEN: Ninja Multi-Config
        - C_COMPILER: /usr/local/bin/gcc-11
          GEN: Xcode
        - C_COMPILER: /usr/local/bin/gcc-13
          GEN: Xcode
    env:
      INSTALL_LIBDIR: lib

    steps:
    - name: Checkout OpenCL-ICD-Loader
      uses: actions/checkout@v3

    - name: Checkout OpenCL-Headers
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/OpenCL-Headers
        path: external/OpenCL-Headers

    - name: Create Build Environment
      shell: bash
      run: |
        cmake -E make_directory $GITHUB_WORKSPACE/build &&
        cmake -E make_directory $GITHUB_WORKSPACE/install &&
        if [[ "${{matrix.GEN}}" == "Ninja Multi-Config" && ! `which ninja` ]]; then brew install ninja; fi &&
        # Install Ninja only if it's the selected generator and it's not available.
        cmake --version

    - name: Build & install OpenCL-Headers
      shell: bash
      run: cmake
        -G "${{matrix.GEN}}"
        -D BUILD_TESTING=OFF
        -D CMAKE_C_FLAGS="-w"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/external/OpenCL-Headers/install
        -S $GITHUB_WORKSPACE/external/OpenCL-Headers
        -B $GITHUB_WORKSPACE/external/OpenCL-Headers/build &&
        cmake
        --build $GITHUB_WORKSPACE/external/OpenCL-Headers/build
        --target install
        --config Release
        --parallel `sysctl -n hw.logicalcpu`

    - name: Configure
      # no -Werror (-Wno-format) during configuration because:
      # warning: ISO C forbids assignment between function pointer and ‘void *’ [-Wpedantic]
      # warning: unused parameter [-Wunused-parameter]
      shell: bash
      run: cmake
        -G "${{matrix.GEN}}"
        -D BUILD_TESTING=ON
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install
        -D CMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/external/OpenCL-Headers/install
        -S $GITHUB_WORKSPACE
        -B $GITHUB_WORKSPACE/build

    - name: Build
      shell: bash
      run: |
        cmake --build $GITHUB_WORKSPACE/build --config Release --parallel `sysctl -n hw.logicalcpu`
        cmake --build $GITHUB_WORKSPACE/build --config Debug --parallel `sysctl -n hw.logicalcpu`

    - name: Test
      working-directory: ${{runner.workspace}}/OpenCL-ICD-Loader/build
      shell: bash
      run: |
        ctest -C Release --output-on-failure --parallel `sysctl -n hw.logicalcpu`
        ctest -C Debug --output-on-failure --parallel `sysctl -n hw.logicalcpu`

    - name: Test install
      shell: bash
      run: |
        cmake --build $GITHUB_WORKSPACE/build --config Release --target install

    - name: Consume (install)
      shell: bash
      run: cmake
        -G "${{matrix.GEN}}"
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/external/OpenCL-Headers/install;$GITHUB_WORKSPACE/install"
        -S $GITHUB_WORKSPACE/test/pkgconfig/bare
        -B $GITHUB_WORKSPACE/build_install &&
        cmake --build $GITHUB_WORKSPACE/build_install --config Release --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;` &&
        cmake --build $GITHUB_WORKSPACE/build_install --config Debug --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;`

    - name: Test pkg-config
      shell: bash
      run: |
        if [[ ! `which pkg-config` ]]; then brew install pkg-config; fi;
        export PKG_CONFIG_PATH=$GITHUB_WORKSPACE/install/$INSTALL_LIBDIR/pkgconfig:$GITHUB_WORKSPACE/external/OpenCL-Headers/install/share/pkgconfig &&
        pkg-config OpenCL --cflags | grep -q "\-I$GITHUB_WORKSPACE/external/OpenCL-Headers/install/include" &&
        pkg-config OpenCL --libs | grep -q "\-L$GITHUB_WORKSPACE/install/lib -lOpenCL"

    - name: Consume pkg-config
      shell: bash
      run: export PKG_CONFIG_PATH=$GITHUB_WORKSPACE/install/$INSTALL_LIBDIR/pkgconfig:$GITHUB_WORKSPACE/external/OpenCL-Headers/install/share/pkgconfig &&
        cmake
        -G "${{matrix.GEN}}"
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/external/OpenCL-Headers/install"
        -D DRIVER_STUB_PATH=$GITHUB_WORKSPACE/build/Release/libOpenCLDriverStub.dylib
        -B $GITHUB_WORKSPACE/build/downstream/pkgconfig
        -S $GITHUB_WORKSPACE/test/pkgconfig/pkgconfig &&
        cmake --build $GITHUB_WORKSPACE/build/downstream/pkgconfig --config Release --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;` &&
        cmake --build $GITHUB_WORKSPACE/build/downstream/pkgconfig --config Debug --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;` &&
        cd $GITHUB_WORKSPACE/build/downstream/pkgconfig &&
        ctest -C Release --output-on-failure --parallel `sysctl -n hw.logicalcpu` &&
        ctest -C Debug --output-on-failure --parallel `sysctl -n hw.logicalcpu`
